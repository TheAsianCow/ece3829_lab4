/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xparameters.h" // add
#include "xiomodule.h" // add


int main()

{
    init_platform();
    u32 data_button;
    u32 data_disp;
    XIOModule iomodule;

    u8 keyboard[10];
    u16 x_coord = 0;
    u16 y_coord = 0;
    u16 pressed = 0;

    u32 x_pos = 9;
    u32 y_pos = 7;
    u32 coordinates = 0;



    while(1) {

    	data_button = XIOModule_Recv(&iomodule, keyboard, 1);
    	if(!pressed) {
			if(keyboard[0] == 'w') { //up
				y_pos = y_pos - 1;
				pressed = 1;
			}
			else if (keyboard[0] == 's') { //down
				y_pos = y_pos + 1;
				pressed = 1;
			}

			else if (keyboard[0] == 'a') { //left
				x_pos = x_pos - 1;
				pressed = 1;

			}

			else if (keyboard[0] == 'd') { //right
				x_pos = x_pos + 1;
				pressed = 1;
			}
			else {
				x_pos = x_pos;
				y_pos = y_pos;
				pressed = pressed;
			}

    	}

	// Debouncer
    	if(keyboard[0] != 'w' && keyboard[0] != 'a' && keyboard[0] != 's' && keyboard[0] != 'd') pressed = 0;

    	// Wrap Around Logic
	if (x_pos == 20)
		x_pos = 0;
    	else if (x_pos == -1)
		x_pos = 19;
	else
		x_pos = x_pos;

    	if (y_pos == 15)
		y_pos = 0;
    	else if (y_pos == -1)
		y_pos = 14;
	else
		y_pos = y_pos;

	XIOModule_DiscreteWrite(&iomodule, 1, x_pos);
	XIOModule_DiscreteWrite(&iomodule, 2, y_pos);

	// Convert Position to BCD for Seven Seg

        u16 x_ten = x_pos >= 10 ? 1 : 0;
        u16 x_one = x_pos >= 10 ? x_pos - 10 : x_pos;
        u16 y_ten = y_pos >= 10 ? 1 : 0;
        u16 y_one = y_pos >= 10 ? y_pos - 10 : y_pos;

    	x_coord |= x_ten;
    	x_coord <<= 4;
    	x_coord |= x_one;

    	y_coord |= y_ten;
    	y_coord <<= 4;
    	y_coord |= y_one;

    	XIOModule_DiscreteWrite(&iomodule, 3, x_coord);
	XIOModule_DiscreteWrite(&iomodule, 4, y_coord);

    	data_disp = XIOModule_DiscreteRead(&iomodule, 1);
    	if(data_disp){
    	    	xil_printf("Lab 4: Alyssa Ungerer and Jeffrey Huang\n\r");
    		xil_printf("Coordinates: X: %d, Y: %d\n\r", x_pos, y_pos);
    	}


	// reset everything before the next loop
    	coordinates = 0;
    	keyboard[0] = 0;
    	x_coord = 0;
    	y_coord = 0;

    }

    cleanup_platform();
    return 0;
}
